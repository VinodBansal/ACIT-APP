- name: Install Java 1.8
  yum: name=java-1.8.0-openjdk state=present
  register: java
- debug: var=java

- name: add group "tomcat"
  group: name=tomcat
  register: group
- debug: var=group

- name: add user "tomcat"
  user: name=tomcat group=tomcat home=/opt/tomcat createhome=no
  become: True
  become_method: sudo
  register: user
- debug: var=user

- name: Download Tomcat
  get_url: url=http://www-eu.apache.org/dist/tomcat/tomcat-8/v8.5.45/bin/apache-tomcat-8.5.45.tar.gz dest=/opt/apache-tomcat-8.5.45.tar.gz
  register: tomcat
- debug: var=tomcat

- name: Extract archive
  command: chdir=/opt /bin/tar xvf /opt/apache-tomcat-8.5.45.tar.gz -C /opt/ creates=/opt/apache-tomcat-8.5.45
#  register: archive
#- debug: var=archive
  args:
    warn: false

- name: Symlink install directory
  file: src=/opt/apache-tomcat-8.5.45 path=/opt/tomcat state=link
  register: dir
- debug: var=dir

- name: Change ownership of Tomcat installation
  file: path=/opt/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes
  register: owner
- debug: var=owner

- name: Configure Tomcat server
  template: src=server.xml dest=/opt/tomcat/conf/
  notify: restart tomcat
  register: config
- debug: var=config

- name: Configure Tomcat users
  template: src=tomcat-users.xml dest=/opt/tomcat/conf/
  notify: restart tomcat

#- name: Install Tomcat init script
#  copy: src=tomcat-initscript.sh dest=/etc/init.d/tomcat mode=0755
#  register: init
#- debug: var=init

- name: Install Tomcat service
  template: src=tomcat.service dest=/etc/system.d/system
  register: tomcatservice
- debug: var=tomcatservice

- name: Ansible copy file
  copy:
    src: /home/acit-web.war
    dest: /opt/tomcat/webapps
  register: copy
- debug: var=copy

- name: Change ownership of webapp build
  file: path=/opt/tomcat/ owner=tomcat group=tomcat state=directory recurse=yes
  register: owner
- debug: var=owner

- name: Start Tomcat
  service: name=tomcat state=started enabled=yes
  register: start
- debug: var=start

#- name: deploy iptables rules
#  template: src=iptables-save dest=/etc/sysconfig/iptables
#  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'"
#  notify: restart iptables

#- name: Apache | add apache iptable rule
#  command: /etc/sysconfig/iptables -I INPUT 1 -p tcp --dport http -j ACCEPT -m comment --comment "Apache"
#  become: true
#  when: iptablesrules.stdout.find("Apache") == -1
#  ignore_errors: yes

#- name: Apache | get iptables rules
#  shell: service iptables status
#  register: iptablesrules
#  always_run: yes
#  become: true
#  ignore_errors: yes
#  args:
#    warn: false

#- debug: var=iptablesrules.stdout_lines
#  ignore_errors: yes

#- name: save iptables
#  shell: service iptables save
#  become: true
#  ignore_errors: yes
#  args:
#    warn: false

#- name: restart iptables
#  service:
#    name: iptables
#    state: restarted
#  become: true
#  ignore_errors: yes
#- name: insert firewalld rule for tomcat http port
#  firewalld: port={{ http_port }}/tcp permanent=true state=enabled immediate=yes
#  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

#- name: Install Ansible Python 2 Dependencies
#  with_items:
#  - python-firewall
#  yum:
#    name: "{{item}}"
#    state: present
#  ignore_errors: yes

#- name: insert firewalld rule for tomcat https port
#  firewalld:
#    service: https
#    permanent: yes
#    state: enabled
#  ignore_errors: yes
#  firewalld: port={{ https_port }}/tcp permanent=true state=enabled immediate=yes
#  when: "ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'"

- name: wait for tomcat to start
  wait_for: port={{http_port}}
